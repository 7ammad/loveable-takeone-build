{
  "openapi": "3.1.0",
  "info": {
    "title": "Saudi Casting Marketplace API",
    "version": "1.0.0",
    "description": "API for the Saudi Casting Marketplace, connecting professional hirers with verified talent.\n",
    "contact": {
      "name": "API Support",
      "url": "https://enter.tech/support",
      "email": "support@enter.tech"
    },
    "license": {
      "name": "All Rights Reserved"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local development server"
    },
    {
      "url": "https://saudi-casting.com/api/v1",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "API health and status checks."
    },
    {
      "name": "Auth",
      "description": "User authentication and session management."
    },
    {
      "name": "Media",
      "description": "Media asset management and uploads."
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Check API Health",
        "description": "Performs a health check of the API, including database connectivity. This endpoint is not protected by authentication.\n",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "API is healthy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "API is unhealthy.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "security": []
    },
    "/media/uploads": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Request a Media Upload URL",
        "description": "Requests a secure, pre-signed URL to upload a media file directly to the S3-compatible storage.\n",
        "operationId": "requestMediaUpload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pre-signed URL created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error. The request body is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "$ref": "#/components/schemas/error"
      },
      "error": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "A description of the error that occurred.",
            "example": "Internal Server Error"
          }
        },
        "required": [
          "ok",
          "error"
        ]
      },
      "RequestUpload": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "The name of the file to be uploaded.",
            "example": "self-tape.mp4"
          },
          "contentType": {
            "type": "string",
            "description": "The MIME type of the file.",
            "example": "video/mp4"
          },
          "size": {
            "type": "integer",
            "description": "The size of the file in bytes.",
            "example": 10485760
          },
          "userId": {
            "type": "string",
            "description": "The CUID of the user uploading the file.",
            "example": "clw5j3j0a0000a4gj8k2h9c7b"
          }
        },
        "required": [
          "filename",
          "contentType",
          "size",
          "userId"
        ]
      },
      "RequestUploadResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "example": true
          },
          "uploadUrl": {
            "type": "string",
            "format": "uri",
            "description": "The pre-signed URL to use for the PUT request to upload the file."
          },
          "assetId": {
            "type": "string",
            "format": "cuid",
            "description": "The ID of the newly created media asset record in the database."
          }
        },
        "required": [
          "ok",
          "uploadUrl",
          "assetId"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}